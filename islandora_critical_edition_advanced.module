<?php

/**
 * @file
 * Add advanced data modeling options to Islandora Critical Editions.
 */

define('ISLANDORA_CRITICAL_EDITION_MANAGE_CONTAINER', 'manage critical edition');
define('ISLANDORA_CRITICAL_EDITION_CREATE', 'create critical editions');
define('ISLANDORA_CRITICAL_EDITION_READ', 'read critical editions');
define('ISLANDORA_CRITICAL_UPDATE', 'update critical editions');
define('ISLANDORA_CRITICAL_EDITION_DELETE', 'delete critical editions');

/**
 * Implements hook_menu().
 */
function islandora_critical_edition_advanced_menu() {
  $items['admin/islandora/critical_edition'] = array(
    'title' => 'Islandora Critical Edition',
    'description' => 'Configure the Critical Edition Solution Pack.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_critical_edition_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['islandora/object/%islandora_object/manage/edition_container'] = array(
    'title' => 'Critical Edition',
    'page callback' => 'islandora_critical_edition_management_menu',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_advanced_object_management_access',
    'access arguments' => array(2, 'manage_container'),
    'file' => 'includes/container_management.inc',
  );
  $items['islandora/object/%islandora_object/manage/apparatus'] = array(
    'title' => 'Critical Edition Apparatus',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('critical_apparatus_form', 2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_advanced_object_management_access',
    'access arguments' => array(2, 'manage_apparatus'),
    'file' => 'includes/critical_apparatus.inc',
  );

  $items['islandora/critical_edition/%islandora_object/associate'] = array(
    'title' => 'Associate Versionable Object',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_critical_edition_attach_versionable', 2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'user_access',
    'access arguments' => array(ISLANDORA_CRITICAL_EDITION_ATTACH_VERSIONABLE_OBJECT),
    'file' => 'includes/container_management.inc',
  );
  $items['islandora/critical_edition/%islandora_object/mvd'] = array(
    'title' => 'Create MVD',
    'page callback' => 'islandora_critical_create_mvd',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASKs,
    'access callback' => 'user_access',
    'access arguments' => array(ISLANDORA_CRITICAL_EDITION_CREATE_MVD),
    'file' => 'includes/calliope_interaction.inc',
  );

  $items['islandora/transcription/edit/%islandora_object'] = array(
    'title' => 'Edit Transcription',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_critical_transcription_edit_form', 3),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_critical_edition_object_management_access',
    'access arguments' => array(3, 'edit_transcription'),
    'file' => 'includes/transcriptions.inc',
  );

  $items['islandora/object/%islandora_object/manage/versionable_object'] = array(
    'title' => 'Versionable Object',
    'page callback' => 'islandora_versionable_object_management_menu',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_object_management_access',
    'access arguments' => array(2, 'manage_versionable_object'),
    'file' => 'includes/versionable_object.inc',
  );
  $items['islandora/critical_edition/%islandora_object/create/versionable_object'] = array(
    'title' => 'Versionable Object',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_critical_edition_create_versionable_object', 2),
    'type' => MENU_CALLBACK,
    'access callback' => 'user_access',
    'access arguments' => array(ISLANDORA_CRITICAL_EDITION_CREATE_VERSIONABLE_OBJECT),
    'file' => 'includes/versionable_object_creation.form.inc',
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function islandora_critical_edition_advanced_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_critical_edition_container' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora_critical_edition_container',
      'pattern' => 'islandora_critical_edition_container__',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_versionable_object' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora_versionable_object',
      'pattern' => 'islandora_versionable_object__',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_critical_apparatus' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora_critical_apparatus',
      'pattern' => 'islandora_critical_apparatus__',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_transcription_object' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora_transcription_object',
      'pattern' => 'islandora_transcription_object__',
      'variables' => array('islandora_object' => NULL),
    ),
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_critical_edition_islandora_criticalEditionContainerCModel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_critical_edition_container', array('islandora_object' => $object));
  return array('' => $output);
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_critical_edition_islandora_criticalapparatuscmodel_islandora_view_object($object, $page_number, $page_size) {
  module_load_include('inc', 'islandora_critical_edition', 'includes/utilities');
  $output = theme('islandora_critical_apparatus', array('islandora_object' => $object));
  return array('' => $output);
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_critical_edition_islandora_transcriptioncmodel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_transcription_object', array('islandora_object' => $object));
  return array('' => $output);
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_critical_edition_islandora_versionableobjectcmodel_islandora_view_object($object, $page_number, $page_size) {
  module_load_include('inc', 'islandora_critical_edition_advanced', 'includes/utilities');
  $members = islandora_critical_edition_get_members($object->id);
  $output = theme('islandora_versionable_object', array('islandora_object' => $object, 'members' => $members));
  return array('' => $output);
}

/**
 * Implements hook_permission().
 */
function islandora_critical_edition_advanced_permission() {
  return array(
    ISLANDORA_CRITICAL_EDITION_CREATE => array(
      'title' => t('Create Critical Edition Objects'),
      'description' => t('Create crit'),
    ),
    ISLANDORA_CRITICAL_EDITION_READ => array(
      'title' => t('Read Critical Edition Objects'),
      'description' => t('Access critical editions and their associated objects.'),
    ),
    ISLANDORA_CRITICAL_UPDATE => array(
      'title' => t('Modify Critical Editions'),
      'description' => t('Modify and edit objects assoicated with Critical Editions.'),
    ),
    ISLANDORA_CRITICAL_EDITION_DELETE => array(
      'title' => t('Modify Critical Editions'),
      'description' => t('Modify and edit objects assoicated with Critical Editions.'),
    ),
    ISLANDORA_CRITICAL_EDITION_MANAGE_CONTAINER => array(
      'title' => t('Manage Critical Edition '),
      'description' => t('manage objects within critcal edition.'),
    ),
  );
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_critical_edition_advanced_islandora_criticalEditionContainerCModel_islandora_ingest_steps($form_state) {
  return array(
    'islandora_create_critical_edition' => array(
      'type' => 'callback',
      'weight' => 8,
      'module' => 'islandora_critical_edition',
      'do_function' => array(
        'function' => 'islandora_critical_edition_add_apparatus',
        'args' => array($form_state['islandora']['objects'][0]),
      ),
    ),
  );
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_critical_edition_advanced_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_critical_edition_advanced');
  // Critical Edition Overview.
  $critical_edition_container_content_model = $connection->repository->constructObject('islandora:criticalEditionContainerCModel');
  $critical_edition_container_content_model->owner = 'fedoraAdmin';
  $critical_edition_container_content_model->label = 'Islandora Critical Edition Overview Content Model';
  $critical_edition_container_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $critical_edition_container_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_critical_edition_container_ds_composite_model.xml", FALSE);
  $critical_edition_container_content_model->ingestDatastream($datastream);
  // Versionable Object Content Model.
  $critical_edition_versionable_object_content_model = $connection->repository->constructObject('islandora:versionableObjectCModel');
  $critical_edition_versionable_object_content_model->owner = 'fedoraAdmin';
  $critical_edition_versionable_object_content_model->label = 'Islandora Versionable Object Content Model';
  $critical_edition_versionable_object_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $critical_edition_versionable_object_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_versionable_object_ds_composite_model.xml", FALSE);
  $critical_edition_versionable_object_content_model->ingestDatastream($datastream);
  // Critical Apparatus Content Model.
  $critical_edition_apparatus_content_model = $connection->repository->constructObject('islandora:criticalApparatusCModel');
  $critical_edition_apparatus_content_model->owner = 'fedoraAdmin';
  $critical_edition_apparatus_content_model->label = 'Islandora Critical Apparatus Content Model';
  $critical_edition_apparatus_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $critical_edition_apparatus_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_critical_apparatus_ds_composite_model.xml", FALSE);
  $critical_edition_apparatus_content_model->ingestDatastream($datastream);
  // Transcription Content Model.
  $transcription_content_model = $connection->repository->constructObject('islandora:transcriptionCModel');
  $transcription_content_model->owner = 'fedoraAdmin';
  $transcription_content_model->label = 'Islandora Critical Transcription Content Model';
  $transcription_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $transcription_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_transcription_ds_composite_model.xml", FALSE);
  $transcription_content_model->ingestDatastream($datastream);
  return array(
    'islandora_critical_edition_advanced' => array(
      'title' => 'Islandora critical editions - advanced',
      'objects' => array(
        $critical_edition_versionable_object_content_model,
        $critical_edition_container_content_model,
        $critical_edition_apparatus_content_model,
        $transcription_content_model,
      ),
    ),
  );
}

/**
 * Controls access to management interface.
 *
 * @param AbstractObject $object
 *   Object to be examined
 * @param String $context
 *   Determines origin of function call
 *
 * @return boolean
 *   Access to path
 */
function islandora_critical_edition_advanced_object_management_access($object, $context) {
  if (is_null($object)) {
    return FALSE;
  }

  $content_models = $object->models;
  $access = FALSE;

  switch ($context) {

    case 'associate_versionable_object':
      if (in_array('islandora:criticalEditionContainerCModel', $content_models)) {
        $access = TRUE;
      }
      break;

    case 'manage_container':
      if (in_array('islandora:criticalEditionContainerCModel', $content_models) && user_access(ISLANDORA_CRITICAL_EDITION_MANAGE_CONTAINER)) {
        $access = TRUE;
      }
      break;

    case 'manage_versionable_object':
      if (in_array('islandora:versionableObjectCModel', $content_models)) {
        $access = TRUE;
      }
      break;

    case 'edit_transcription':
      if (in_array('islandora:transcriptionCModel', $content_models)) {
        $access = TRUE;
      }
      break;

    case 'manage_apparatus':
      if (in_array('islandora:criticalApparatusCModel', $content_models)) {
        $access = TRUE;
      }
      break;
    case 'manage_apparatus':
      if (in_array('islandora:criticalApparatusCModel', $content_models)) {
        $access = TRUE;
      }
      break;
  }

  return $access && islandora_object_access_callback(FEDORA_VIEW_OBJECTS, $object);
}

/**
 * Implements hook_islandora_xml_form_builder_form_associations().
 */
function islandora_critical_edition_islandora_xml_form_builder_form_associations() {
  return array(
    'critical_edition_form_mods' => array(
      'content_model' => 'islandora:criticalEditionContainerCModel',
      'form_name' => 'Islandora Critical Edition Mods Form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
    'versionable_object_form_mods' => array(
      'content_model' => 'islandora:versionableObjectCModel',
      'form_name' => 'Islandora Versionable Object Form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_critical_edition_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_critical_edition_advanced');
  return array(
    'Islandora Versionable Object Form' => array('form_file' => "$module_path/data/forms/versionable_object_form_mods.xml"),
    'Islandora Critical Edition Mods Form' => array('form_file' => "$module_path/data/forms/critical_edition_container_form_mods.xml"),
  );
}

/**
 * Adds Apparatus object to Critical Edition Container.
 *
 * @param array $form_state
 *   Drupal form state
 */
function islandora_critical_edition_add_apparatus($fedora_object) {
  $tuque = new IslandoraTuque();
  $namespace = islandora_get_namespace($fedora_object->id);
  $apparatus = $tuque->repository->constructObject($namespace);
  $apparatus->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOf', $fedora_object->id);
  $apparatus->relationships->add(FEDORA_MODEL_URI, 'hasModel', 'islandora:criticalApparatusCModel');
  $apparatus->label = t("Critical Apparatus");
  $apparatus->owner = $fedora_object->owner;
  $tn_path = drupal_get_path('module', 'islandora_critical_edition_advanced') . '/images/apparatus.jpg';
  $tn = $apparatus->constructDatastream('TN');
  $tn->label = 'Thumbnail';
  $tn->mimetype = 'image/jpg';
  $tn->setContentFromFile($tn_path);
  $apparatus->ingestDatastream($tn);
  $tuque->repository->ingestObject($apparatus);
}